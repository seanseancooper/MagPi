<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>MagPi SDR</title>
    <script src="{{ url_for('static', filename='js/socket.io.js') }}"></script>
    <script src="{{ url_for('static', filename='js/Cango-29v04.js') }}"></script>
    <script src="{{ url_for('static', filename='js/CangoAxes-10v06.js') }}"></script>
    <script src="{{ url_for('static', filename='js/Spectrogram-2v01.js') }}"></script>
    <script src="{{ url_for('static', filename='js/make_spectrogram.js') }}"></script>

    <link rel="stylesheet" href="{{ url_for('static', filename='css/sdr_info.css') }}">

    <script>

        function setsHeaders(xhttp) {
            xhttp.setRequestHeader('Access-Control-Allow-Origin', 'localhost:*');
            xhttp.setRequestHeader('Access-Control-Allow-Methods', 'POST');
            xhttp.setRequestHeader('Content-Type', 'text/html');
            xhttp.setRequestHeader('Access-Control-Allow-Headers', 'Content-Type, Access-Control-*');
        }

        function add(uniqId, trgt){
            var xhttp = new XMLHttpRequest();
            xhttp.open("POST", "{{ url_for('.index') }}add/" + uniqId, true);
            setsHeaders(xhttp);
            xhttp.setRequestHeader('TARGET', trgt);
            xhttp.send();

            xhttp.onload = function() {
                const resp = xhttp.response;
                var aButton = document.getElementById("add_button_" + uniqId);
                if (resp == "OK"){
                    aButton.classList.value = "adding_button";
                    aButton.innerHTML = "------";
                    setTimeout(function() {
                        aButton.classList.value = "add_btn added_button";
                        aButton.innerHTML = "ADDED";
                    }, 250);
                } else {
                    aButton.classList.value = "adding_failed_button";
                    aButton.innerHTML = "FAILED!";
                };
            };
        }

        function mute(uniqId, trgt){
            var xhttp = new XMLHttpRequest();

            xhttp.open("POST", "{{ url_for('.index') }}mute/" + uniqId, true);
            setsHeaders(xhttp);
            xhttp.setRequestHeader('TARGET', trgt);
            xhttp.send();

            xhttp.onload = function() {
                const resp = xhttp.response;
                var mButton = document.getElementById("mute_button_" + uniqId);

                if (resp == "False"){
                    mButton.classList.value = "muting_button";
                    mButton.innerHTML = "------";
                    setTimeout(function() {
                        mButton.classList.value = "mute_btn unmute_button";
                        mButton.innerHTML = "MUTE";
                    }, 250);
                }

                if (resp == "True"){
                    mButton.classList.value = "muting_button";
                    mButton.innerHTML = "------";
                    setTimeout(function() {
                        mButton.classList.value = "mute_btn mute_button";
                        mButton.innerHTML = "UNMUTE";
                    }, 250);
                };
            };
        }

        function remove(uniqId, trgt){
            var xhttp = new XMLHttpRequest();
            xhttp.open("POST", "{{ url_for('.index') }}remove/" + uniqId, true);
            setsHeaders(xhttp);
            xhttp.setRequestHeader('TARGET', trgt);
            xhttp.send();

            xhttp.onload = function() {
                const resp = xhttp.response;
                rButton = document.getElementById("remove_button_" + uniqId);
                if (resp == "OK"){
                    rButton.classList.value = "rem_button";
                    rButton.style = "color:white;";
                    rButton.innerHTML = "*";
                    setTimeout(function() {
                        mButton = document.getElementById("mute_button_" + uniqId);
                        uButton = document.getElementById("unmute_button_" + uniqId);

                        if (mButton) {
                                mButton.style = "display:none;"
                        };

                        if (uButton) {
                                uButton.style = "display:none;"
                        };

                        // note width increase
                        rButton.classList.value = "rem_button removed_button button";
                        rButton.innerHTML = "REMOVED";

                    }, 250);
                } else {
                    rButton.classList.value = "remove_failed_button";
                    rButton.innerHTML = "x";
                };
            };
        }

        function reload(){
            document.location.reload();
        }

        function replace_data(){
            // use foreach...
            scanner.replaceData();
        }

        const dataLoaderLoading = "&nbsp;";

        function colorUniqId(data, splt){
            var parts = data.split(splt);
            var R = (parseInt(parts[0], 16) + parseInt(parts[1], 16)) % 255;
            var G = (parseInt(parts[2], 16) + parseInt(parts[3], 16)) % 255;
            var B = (parseInt(parts[4], 16) + parseInt(parts[5], 16)) % 255;
            return [R,G,B];
        };

        function averageColor([R,G,B]){
            let avg = R+G+B/3;
            return (avg > 128)? "00,00,00": "255,255,255";
        };
    </script>
</head>
<body>

{% set tab = 'scanner' %}
{% set module = 'sdr' %}
{% include 'sdr.js.j2' %}

</body>
</html>