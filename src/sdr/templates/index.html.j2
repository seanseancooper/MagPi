<!DOCTYPE html>
<html lang="en">
<head>
    <script src="{{ url_for('static', filename='js/socket.io.js') }}"></script>
    <script src="{{ url_for('static', filename='js/Cango-29v04.js') }}"></script>
    <script src="{{ url_for('static', filename='js/CangoAxes-10v06.js') }}"></script>
    <script src="{{ url_for('static', filename='js/Spectrogram-2v01.js') }}"></script>
    <script src="{{ url_for('static', filename='js/make_spectrogram.js') }}"></script>

    <link rel="stylesheet" href="{{ url_for('static', filename='css/info.css') }}">
</head>
<body>

    <!-- Info Layer Container -->
    <div id="infoLayer" class="info-layer">
        <div class="info-content">
            <p id="info-min">Min: </p>
            <p id="info-max">Max: </p>
            <div class="info-header">Signal Controls</div>
            <div id="info_panel">
                <div><strong>Label:</strong> <span id="info_label"></span></div>
                <div><strong>Freq:</strong> <span id="info_freq"></span></div>
                <div><strong>BW:</strong> <span id="info_bw"></span></div>
                <div><strong>Mod:</strong> <span id="info_mod"></span></div>
                <div><strong>SNR:</strong> <span id="info_snr"></span></div>
            </div>
            <div class="info-buttons">
                <button onclick="emitControlCommand('ctrl_record')">Record</button>
                <button onclick="emitControlCommand('ctrl_play')">Play</button>
                <button onclick="emitControlCommand('ctrl_solo')">Solo</button>
                <button onclick="emitControlCommand('ctrl_mute')">Mute</button>
                <button onclick="emitControlCommand('ctrl_analyze')">Analyze</button>
                <button onclick="emitControlCommand('ctrl_demux')">Demux</button>
                <button onclick="emitControlCommand('ctrl_decode')">Decode</button>
                <button onclick="emitControlCommand('ctrl_encode')">Encode</button>
                <button onclick="emitControlCommand('ctrl_filter')">Filter</button>
                <button onclick="emitControlCommand('ctrl_block')">Block</button>
                <button onclick="emitControlCommand('ctrl_label')">Label</button>
                <button onclick="emitControlCommand('ctrl_test')">Test</button>
            </div>
        </div>
    </div>

    <div class="" style="">
        <label for="rangeMin">Min dB:</label>
        <input type="range" id="rangeMin" min="-100" max="100" step="1" value="-5">
        <label for="rangeMax">Max dB:</label>
        <input type="range" id="rangeMax" min="-100" max="100" step="1" value="30">
    </div>

    <script>
        function emitControlCommand(commandName) {
            const selectedSignalId = getSelectedSignalId(); // Replace with actual logic to identify selected signal
                socket.emit('control_command', {
                    command: commandName,
                    signal_id: selectedSignalId
                });
        }

        function getSelectedSignalId() {
            return window.selectedSignalId || 'default_signal';
        }

        function updateInfoDisplay(metadata) {
            document.getElementById("info_label").textContent = metadata.label || "Unknown";
            document.getElementById("info_freq").textContent = `${(metadata.center_freq / 1e6).toFixed(3)} MHz`;
            document.getElementById("info_bw").textContent = `${(metadata.bandwidth / 1e3).toFixed(1)} kHz`;
            document.getElementById("info_mod").textContent = metadata.modulation || "â€”";
            document.getElementById("info_snr").textContent = `${metadata.snr.toFixed(1)} dB`;
        }

        const rangeMin = document.getElementById("rangeMin");
        const rangeMax = document.getElementById("rangeMax");

        function updateSliderBounds() {
            let minVal = parseInt(rangeMin.value);
            let maxVal = parseInt(rangeMax.value);

            if (minVal > maxVal) {
                minVal = maxVal;
                rangeMin.value = minVal;
            }

            normBounds.minDb = minVal;
            normBounds.maxDb = maxVal;

            document.getElementById("info-min").textContent = `Min: ${minVal} dB`;
            document.getElementById("info-max").textContent = `Max: ${maxVal} dB`;

        }

        rangeMin.addEventListener('input', updateSliderBounds);
        rangeMax.addEventListener('input', updateSliderBounds);
    </script>

    <div class="" style="position: relative; width: 1024px; height: 250px;">
        <canvas id="cvs_spec" style="position: absolute; top: 30; left: 0; z-index: 1;" width="1024" height="250"></canvas>
        <canvas id="cvs_hl"  style="position: absolute; top: 50; left: 0; z-index: 2;" width="1024" height="250"></canvas>
        <canvas id="cvs_xaxis" style="position: absolute; top: 0; left: 0; z-index: 3;"  width="1024" height=30"></canvas>
    </div>

    <script src="{{ url_for('static', filename='js/make_layers.js') }}"></script>

</body>
</html>
