<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ViewContainer:
{%- for module in container.modules -%}
    {{ module|upper }}:
{%- endfor -%}
    </title>
    <link href="{{ url_for('vc_bp.static', filename='tabulator/css/tabulator_midnight.min.css') }}" rel="stylesheet">
    <link rel="stylesheet" href="{{ url_for('vc_bp.static', filename='css/container.css') }}">

    <script type="text/javascript" src="{{ url_for('vc_bp.static', filename='tabulator/js/tabulator.min.js') }}"></script>
    <script src="{{ url_for('vc_bp.static', filename='js/peity-vanilla.js') }}"></script>

    <script>
        function loadTab(event, tabName){

            var i, module_tab, tab_button;
            module_tab = document.getElementsByClassName("module_tab");

            for (i = 0; i < module_tab.length; i++) {
                module_tab[i].style.display = "none";
                document.getElementById(module_tab[i].id + '_bar_container').style.display = "none";
            }

            tab_button = document.getElementsByClassName("tab_button");
            for (i = 0; i < tab_button.length; i++) {
                tab_button[i].className = tab_button[i].className.replace(" active", "");
            }

            document.getElementById(tabName + '_bar_container').style.display = "block";
            document.getElementById(tabName).style.display = "block";
            event.currentTarget.className += " active";

        }
    </script>
</head>
<body>
    <div id="tabs" style="height:30px">
{% for tab, timeout in container.module_tabs: %}
    <button id="container_tab_{{ tab }}" class="tab_button {{ 'active' if loop.index0 }}" onclick="loadTab(event, '{{ tab }}')">{{ tab }}</button>
{% endfor %}
    </div>

<!--
    BEGIN FILTER: MODULE_TAB LEVEL
    [optional]
    currently works on 'initial' tab,
    PASS MODULE_TAB in js
    pass 'columns' to 'filter.html.js.j2'
-->
{% include 'filter.html.js.j2' %}
<!-- END FILTER -->

<!--
    BEGIN OPS BUTTONS: MODULE LEVEL
    [optional]
    ADD/MUTE/REMOVE/WRITE/ALL/NONE BUTTONS
    ALSO REQUIRES 'MORE BUTTONS' BELOW.
-->
{% include 'ops_buttons.js' %}
<!-- END OPS BUTTONS -->
    <!-- AUTOLOAD MODULE_TAB CALLS MODULE_TAB.replace_data()-->
    <script>
        function reload(){
            // THIS IS ONLY FOR THE BUTTON
            document.location.reload();
        }

        function replace_data(){
            wifi.replaceData();
            tracked.replaceData();
            ghosts.replaceData();
            trx.replaceData();
        }
    </script>


    <script>
        const dataLoaderLoading = "&nbsp;";

        function colorUniqId(data, splt){
            var parts = data.split(splt);
            var R = (parseInt(parts[0], 16) + parseInt(parts[1], 16)) % 255;
            var G = (parseInt(parts[2], 16) + parseInt(parts[3], 16)) % 255;
            var B = (parseInt(parts[4], 16) + parseInt(parts[5], 16)) % 255;
            return [R,G,B];
        };

        function averageColor([R,G,B]){
            let avg = R+G+B/3;
            return (avg > 128)? "00,00,00": "255,255,255";
        };
    </script>

{% for tab, timeout in container.module_tabs: %}
    {% include 'autoloader.js.j2' %}
    <div id="{{ tab }}_bar_container" style="padding-top:2px;padding-bottom:3px;{{ 'display:none;' if loop.index0 > 0 }}" class="bar_container">
        <div id="{{ tab }}_meter" style=""><script>{{ tab }}_make_deadline_bar();</script></div>
    </div>
    <div id="{{ tab }}" class="module_tab" style="{{ 'display:none;' if loop.index0 > 0 }}"></div>
{% endfor %}

{% for tab, timeout in container.module_tabs: %}
    {% set included_tab = tab + '.js.j2' %}
    {% include included_tab ignore missing %}
{% endfor %}

    <script>
        /*
            ********** MORE BUTTONS **********
        */
        container_elements = [];

        // generate one for each 'module' tab; this is wifi module_tab 'array'
        container_elements.push(document.getElementById('wifi'));
        container_elements.push(document.getElementById('tracked'));
        container_elements.push(document.getElementById('ghosts'));

        // and this is TRX.
        container_elements.push(document.getElementById('trx'));

        // this should be in all modules. add new global buttons here.
        container_elements.push(document.getElementById("all_button"));
        container_elements.push(document.getElementById("none_button"));
        container_elements.push(document.getElementById("write_button"));
        container_elements.push(document.getElementById("reload_button"));

        container_elements.forEach(function(element) {

            element.addEventListener('click', function(event) {

                if (event.target.classList.contains('trk_btn')) {
                    if (event.target.classList.contains('add_button')) {
                        add(event.target.value, event.target.attributes['data-target'].value);
                    };
                    if (event.target.classList.contains('rem_button')) {
                        remove(event.target.value, event.target.attributes['data-target'].value)
                    };
                };

                if (event.target.classList.contains('mute_btn')) {
                    mute(event.target.value, event.target.attributes['data-target'].value);
                };

                if (event.target.classList.contains('all_button')) {
                    select_all(this, event.target.attributes['data-target'].value);
                };

                if (event.target.classList.contains('none_button')) {
                    select_none(this, event.target.attributes['data-target'].value);
                };

                if (event.target.classList.contains('write_button')) {
                    write_tracked(this, event.target.attributes['data-target'].value); // 'wifi' the http header
                };
                // perhaps this can be a fragment for a module specific button?
                if (event.target.classList.contains('reload_button')) {
                    reload();
                };

            });
        });
    </script>
</body>
</html>
<!-- END ROOT -->